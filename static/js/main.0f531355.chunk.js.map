{"version":3,"sources":["assets/profile.png","components/Home.js","components/SpotifyFrame.js","components/TwoColumnSection.js","components/Article.js","components/Contact.js","data/routes.js","components/Interests.js","components/Projects.js","components/NavBar.js","components/ProfilePic.js","components/ProfileCard.js","components/ContactBar.js","components/AboutMe.js","components/LeftColumn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","SpotifyFrame","title","className","src","frameBorder","allowtransparency","allow","TwoColumnSection","props","type","left","right","Article","Typography","component","content","Contact","routes","name","path","exact","used","variant","NavBar","React","useState","initialValue","window","location","href","split","pop","value","setValue","Paper","elevation","Tabs","indicatorColor","textColor","onChange","event","newValue","filter","route","map","index","Tab","key","label","Link","to","ProfilePic","profile","alt","ProfileCard","ContactBar","target","rel","AboutMe","LeftColumn","class","App","themeLight","createMuiTheme","palette","background","default","responsiveFontSizes","ThemeProvider","theme","ScopedCssBaseline","Boolean","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,qQCK5BC,MAHf,WACI,OAAO,8C,MCMIC,MAPf,WACI,OACI,4BAAQC,MAAM,eAAeC,UAAU,QAAQC,IAAI,8DAC/CC,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,qB,cCS5CC,MAXf,SAA0BC,GACtB,OAAO,6BAASN,UAAU,aACtB,yBAAKA,UAA0B,eAAfM,EAAMC,KAAwB,YAAc,aACvDD,EAAME,MAEX,yBAAKR,UAA0B,eAAfM,EAAMC,KAAwB,aAAe,cACxDD,EAAMG,SCAJC,MANf,SAAiBJ,GACb,OAAO,kBAACK,EAAA,EAAD,CAAYC,UAAU,KACxBN,EAAMO,UCOAC,ICwBAC,EA/BA,CACX,CACIC,KAAM,OACNC,KAAM,IACNL,UAAWf,EACXqB,OAAO,EACPC,MAAM,GAEV,CACIH,KAAM,gBACNC,KAAM,aACNL,UCVR,WACI,OACI,6BACI,kBAACD,EAAA,EAAD,CAAYC,UAAU,KAAKQ,QAAQ,MAAnC,iBACA,kBAAC,EAAD,CAAkBb,KAAK,aAAaC,KAAM,kBAAC,EAAD,CAASK,QAAQ,2GACpBJ,MAAO,kBAAC,EAAD,QAC9C,kBAAC,EAAD,CAAkBF,KAAK,cAAcC,KAAM,kBAAC,EAAD,CAASK,QAAQ,KAAOJ,MAAO,kBAAC,EAAD,CAASI,QAAQ,SDK/FK,OAAO,EACPC,MAAM,GAEV,CACIH,KAAM,WACNC,KAAM,YACNL,UErBR,WACI,OAAO,yCFqBHM,OAAO,EACPC,MAAM,GAEV,CACIH,KAAM,eACNC,KAAM,WACNL,UD3BR,WACI,OACI,6BACI,kBAACD,EAAA,EAAD,CAAYC,UAAU,KAAKQ,QAAQ,MAAnC,cACA,kBAACT,EAAA,EAAD,CAAYC,UAAU,KAAtB,SCwBJM,OAAO,EACPC,MAAM,I,8BGkBCE,MAtCf,SAAgBf,GAAO,MAEOgB,IAAMC,UAAS,WACrC,IACIC,EACJ,OAFUC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,OAGtC,IAAK,GACDL,EAAe,EACf,MACJ,IAAK,YACDA,EAAe,EACf,MACJ,QACIA,EAAe,EAEvB,OAAOA,KAfQ,mBAEZM,EAFY,KAELC,EAFK,KAuBnB,OACI,kBAACC,EAAA,EAAD,CAAOhC,UAAU,gBAAgBiC,UAAW,GACxC,kBAACC,EAAA,EAAD,CAAMlC,UAAU,gBACZ8B,MAAOA,EACPK,eAAe,UACfC,UAAU,UACVC,SAZS,SAACC,EAAOC,GACzBR,EAASQ,IAYDnB,QAAQ,aATTL,EAAOyB,QAAO,SAACC,GAAD,OAAWA,EAAMtB,QAAMuB,KAAI,SAACD,EAAOE,GAAR,OAAkB,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAOG,MAAOL,EAAMzB,KAAMJ,UAAWmC,IAAMC,GAAIP,EAAMxB,a,uBCzB1HgC,MAJf,WACI,OAAO,yBAAKhD,IAAKiD,IAASlD,UAAU,cAAcmD,IAAI,qBCO3CC,MARf,WACI,OAAO,6BACH,kBAAC,EAAD,MACA,kBAACzC,EAAA,EAAD,CAAYC,UAAU,KAAKQ,QAAQ,MAAnC,kBACA,kBAACT,EAAA,EAAD,KAAY,uBAAGgB,KAAK,uCAAR,mC,2DC0BL0B,MA5Bf,WAEI,OACI,yBAAKrD,UAAU,eACX,4BACI,4BACI,uBAAG2B,KAAK,mCAAmC2B,OAAO,SAASC,IAAI,uBAE3D,kBAAC,IAAD,QAGR,4BACI,uBAAG5B,KAAK,uCACJ,kBAAC,IAAD,QAGR,4BACI,uBAAGA,KAAK,yDACJ,kBAAC,IAAD,WCLT6B,MAhBf,WACI,OAAO,6BACH,kBAAC7C,EAAA,EAAD,CAAYC,UAAU,KAAtB,2CAC4C,uDAD5C,OACgF,qEAEhF,kBAACD,EAAA,EAAD,CAAYC,UAAU,KAAtB,6JAIA,kBAACD,EAAA,EAAD,CAAYC,UAAU,KAAtB,gICGO6C,MAVf,SAAoBnD,GAChB,OAAQ,yBAAKN,UAAWM,EAAMoD,OAC1B,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,Q,sCCiCOC,MAnCf,WACE,IAAIC,EAAaC,YAAe,CAC9BC,QAAS,CACPC,WAAY,CACVC,QAAS,gBAKf,OADAJ,EAAaK,YAAoBL,GAE/B,kBAACM,EAAA,EAAD,CAAeC,MAAOP,GACpB,kBAACQ,EAAA,EAAD,KACE,yBAAKpE,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAY0D,MAAM,gBAClB,yBAAK1D,UAAU,gBACb,kBAAC,IAAD,KACGe,EAAOyB,QAAO,SAACC,GAAD,OAAWA,EAAMtB,QAAMuB,KAAI,SAACD,EAAOE,GAAR,OACxC,kBAAC,IAAD,CACEE,IAAKF,EACL1B,KAAMwB,EAAMxB,KACZL,UAAW6B,EAAM7B,UACjBM,MAAOuB,EAAMvB,kBCpBbmD,QACW,cAA7B5C,OAAOC,SAAS4C,UAEe,UAA7B7C,OAAOC,SAAS4C,UAEhB7C,OAAOC,SAAS4C,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f531355.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.df28ee47.png\";","import React from 'react';\n\nfunction Home() {\n    return <h1>Hello, world.</h1>\n}\nexport default Home","import React from 'react';\nimport './styles/spotify.css';\nfunction SpotifyFrame() {\n    return (\n        <iframe title=\"SpotifyFrame\" className=\"frame\" src=\"https://open.spotify.com/embed/album/0HrDrQPhOBR04RKmY7DCJj\"\n            frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n    );\n}\n\nexport default SpotifyFrame","import React from 'react';\nimport './styles/twocolumnsection.css';\n\nfunction TwoColumnSection(props) {\n    return <section className=\"container\">\n        <div className={props.type === \"left-heavy\" ? \"left-wide\" : \"left-thin\"}>\n            {props.left}\n        </div>\n        <div className={props.type === \"left-heavy\" ? \"right-thin\" : \"right-wide\"}>\n            {props.right}\n        </div>\n    </section>\n}\n\nexport default TwoColumnSection","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction Article(props){\n    return <Typography component=\"p\">\n        {props.content}\n    </Typography>\n}\n\nexport default Article","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nfunction Contact() {\n    return (\n        <div>\n            <Typography component=\"h2\" variant=\"h4\">Contact me</Typography>\n            <Typography component=\"p\">WIP</Typography>\n        </div>\n    );\n}\n\nexport default Contact","import Home from '../components/Home'\nimport Interests from '../components/Interests'\nimport Projects from '../components/Projects'\nimport Contact from '../components/Contact'\n\nconst routes = [\n    {\n        name: \"Home\",\n        path: \"/\",\n        component: Home,\n        exact: true,\n        used: true\n    },\n    {\n        name: \"Things I Like\",\n        path: \"/interests\",\n        component: Interests,\n        exact: false,\n        used: true\n    },\n    {\n        name: \"Projects\",\n        path: \"/projects\",\n        component: Projects,\n        exact: false,\n        used: false\n    },\n    {\n        name: \"Get in touch\",\n        path: \"/contact\",\n        component: Contact,\n        exact: false,\n        used: true\n    }\n]\n\nexport default routes\n","import React from 'react'\nimport SpotifyFrame from './SpotifyFrame'\nimport { Typography } from '@material-ui/core';\nimport TwoColumnSection from './TwoColumnSection';\nimport Article from './Article';\n\nfunction Interests() {\n    return (\n        <div>\n            <Typography component=\"h2\" variant=\"h4\">Things I Like</Typography>\n            <TwoColumnSection type=\"left-heavy\" left={<Article content=\"Please bare with me - this site is only 1 day old. In the mean time,\n            here's some music you might like.\" />} right={<SpotifyFrame />} />\n            <TwoColumnSection type=\"right-heavy\" left={<Article content=\"\" />} right={<Article content=\"\" />} />\n        </div>\n    );\n}\n\nexport default Interests","import React from 'react'\n\nfunction Projects(){\n    return <h1>Projects</h1>\n}\n\nexport default Projects","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport routes from '../data/routes'\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\n\nimport './styles/navbar.css';\n\n\n\n\nfunction NavBar(props) {\n    // Set the highlighted tab to the current page - eg, if you refresh.\n    const [value, setValue] = React.useState(() => {\n        let url = window.location.href.split('/').pop();\n        let initialValue;\n        switch(url){\n            case \"\":\n                initialValue = 0;\n                break;\n            case \"interests\":\n                initialValue = 1;\n                break;\n            default:\n                initialValue = 2;\n        }\n        return initialValue;\n    });\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function showRoutes() {\n        return routes.filter((route) => route.used).map((route, index) => <Tab key={index} label={route.name} component={Link} to={route.path} />)\n    }\n    return (\n        <Paper className=\"tab-colouring\" elevation={1}>\n            <Tabs className=\"tab-colouring\"\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                variant=\"fullWidth\"\n            >\n                {showRoutes()}\n            </Tabs>\n        </Paper>\n    )\n}\n\nexport default NavBar","import React from 'react';\nimport profile from '../assets/profile.png';\nimport './styles/profilepic.css';\n\nfunction ProfilePic(){\n    return <img src={profile} className=\"profile-pic\" alt=\"Enjoying nature\" />\n}\n\nexport default ProfilePic","import React from 'react';\nimport ProfilePic from './ProfilePic';\nimport Typography from '@material-ui/core/Typography';\n\nfunction ProfileCard(){\n    return <div>\n        <ProfilePic />\n        <Typography component=\"h1\" variant=\"h4\">Thomas Allison</Typography>\n        <Typography><a href=\"mailto:tomlaurenceallison@gmail.com\">tomlaurenceallison@gmail.com</a></Typography>\n    </div>\n}\n\nexport default ProfileCard;","import React from 'react';\nimport './styles/contactbar.css';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nfunction ContactBar() {\n\n    return (\n        <div className='contact-bar'>\n            <ul>\n                <li>\n                    <a href=\"https://github.com/TomAllison067\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        {/* <i className=\"fab fa-github fa-2x\"></i> */}\n                        <GitHubIcon />\n                    </a>\n                </li>\n                <li>\n                    <a href=\"mailto:tomlaurenceallison@gmail.com\">\n                        <EmailIcon />\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://www.linkedin.com/in/thomas-allison-3847901b1/\">\n                        <LinkedInIcon />\n                    </a>\n                </li>\n\n            </ul>\n        </div>\n\n    )\n}\n\nexport default ContactBar;","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nfunction AboutMe() {\n    return <div>\n        <Typography component=\"p\">\n            Hey there! I'm Tom, currently pursing a <em>BSc in Computer Science</em> at <b>Royal Holloway, University of London.</b>\n        </Typography>\n        <Typography component=\"p\">\n            Before that, I was a professional musician. I'm a little rusty compared to what I used to be, but I still love music and try to practice drums\n            every day.\n        </Typography>\n        <Typography component=\"p\">\n            In my spare time I like rock-climbing, running, and making electronic music. I drink too much coffee and love a good book.\n        </Typography>\n\n    </div>\n}\n\nexport default AboutMe","import React from 'react';\nimport ProfileCard from './ProfileCard';\nimport ContactBar from './ContactBar';\nimport AboutMe from './AboutMe';\n\nfunction LeftColumn(props) {\n    return (<div className={props.class}>\n        <ProfileCard />\n        <hr />\n        <AboutMe />\n        <hr />\n        <ContactBar />\n    </div>);\n}\n\nexport default LeftColumn;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport LeftColumn from './components/LeftColumn'\nimport routes from './data/routes'\nimport ScopedCssBaseline from '@material-ui/core/ScopedCssBaseline';\nimport { ThemeProvider, createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport './App.css';\n\nfunction App() {\n  let themeLight = createMuiTheme({\n    palette: {\n      background: {\n        default: \"#fafafa00\"\n      }\n    }\n  });\n  themeLight = responsiveFontSizes(themeLight);\n  return (\n    <ThemeProvider theme={themeLight}>\n      <ScopedCssBaseline>\n        <div className=\"App\">\n          <NavBar />\n          <div className=\"flex-container\">\n            <LeftColumn class=\"column left\" />\n            <div className=\"column right\">\n              <Switch>\n                {routes.filter((route) => route.used).map((route, index) =>\n                  <Route\n                    key={index}\n                    path={route.path}\n                    component={route.component}\n                    exact={route.exact}\n                  />)}\n              </Switch>\n            </div>\n          </div>\n        </div >\n      </ScopedCssBaseline>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}